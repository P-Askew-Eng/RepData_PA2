complete("specdata",1)
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata",1)
complete("specdata",3)
?cbind
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata",3)
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata",3)
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata",3)
debugSource('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata",3)
debugSource('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata",3)
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/Paul Askew/Coursera/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
x=matrix((1,2,3,4),2,2)
x=matrix((1:4),2,2)
x
solve(x)
source('C:/Users/Paul Askew/Coursera/ass2.R')
makeVector(1:10)
makeVector()
cachemean
bob<-makeVector(c(2,3,4,5,6))
bob
bob$set(makeVector(1:10))
bob
one<-makeVector()
one$set(1:3)
one
x
m
listvec<-makeVector(c(1,2,3))
cachemean(listvec)
cachemean(listvec)
listvec
source('C:/Users/Paul Askew/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
listmat<-makeCachematrix(c(1:4),2,2)
listmat<-makeCacheMatrix(c(1:4),2,2)
listmat<-makeCacheMatrix(c(1:4))
listmat<-makeCacheMatrix(c(1:4))
source('C:/Users/Paul Askew/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
listmat<-makeCacheMatrix(c(1:4))
cacheSolve(listvec)
cacheSolve(listvec)
x
solve(x)
x%*%solve(x)
listvec$get()
listmat$get()
class(listmat$get())
listmat<-makeCacheMatrix((1:4),2,2)
listmat<-makeCacheMatrix((1:4))
listmat$get()
class(listmat$get())
listmat<-makeCacheMatrix(x)
class(listmat$get())
listmat$get()
cachesolve(listmat
)
cachesolve(listmat)
source('C:/Users/Paul Askew/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
listmat<-makeCacheMatrix(x)
cachesolve(listmat)
cacheSolve(listmat)
cacheSolve(listmat)
listmat<-makeCacheMatrix(1,2,3,4)
source('C:/Users/Paul Askew/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
listmat<-makeCacheMatrix(((1:4),2,2))
listmat<-makeCacheMatrix(((1:4)2,2))
listmat<-makeCacheMatrix(((1:4)))
listmat$get()
?m"matrix-class"
?"matrix"
source('C:/Users/Paul Askew/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
listmat<-makeCacheMatrix(1,2,3,4)
listmat<-makeCacheMatrix(1:4)
class(listmat$get())
listmat$get()
source('C:/Users/Paul Askew/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
listmat<-makeCacheMatrix(1:4)
listmat$get()
class(listmat$get())
newmat<-matrix((1:9),3,3)
newmat
listmat<-makeCacheMatrix(newmat)
listmat$get()
makeCacheMatrix(listmat)
cacheSolve(listmat)
makeCacheMatrix(matrix(1:4))
listmat<-makeCacheMatrix(matrix(1:4))
listmat$get()
listmat<-makeCacheMatrix(matrix(1:4,2,2))
listmat$get()
cacheSolve(listmat)
cacheSolve(listmat)
listmat$getinv
listmat$setinv
listmat$setinv()
listmat$get
listmat$get()
listmat$setinv((5,6,7,8),2,2)
listmat$setinv(5:8,2,2)
listmat$setinvmatrix((5:8,2,2))
listmat$setinv(matrix(5:8,2,2))
listmat$get()
listmat$set(matrix(5:8,2,2))
listmat$get()
cacheSolve(listmat)
listmat$getinv(listmat)
source('C:/Users/Paul Askew/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Paul Askew/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
listmat$getinv(listmat)
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[,11])
library(datasets)
data(iris)
?iris
mean(Sepal.Length)
lapply(Sepal.Length,mean)
iris
colmeans(iris)
apply(iris[,1:4]2,mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
colMeans(iris)
rowMeans(iris[,1:4])
apply(iris$Species==virginica[,1],1,mean)
apply(iris$Species=="virginica"[,1],1,mean)
apply(iris[,1],1,mean)$Species=="virginica"
apply(iris$Species[,1],1,mean)=="virginica"
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
?rnorm
?rpois
source('C:/Users/Paul Askew/Coursera/best.R')
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
best("TX","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
?max
source('C:/Users/Paul Askew/Coursera/best.R')
?max
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
source("submitScript3.R")
submit()
submit()
submit()
source('C:/Users/Paul Askew/Coursera/best.R')
best("AK","heart attack")
best("TX","heart attack")
head(data)
head(dat)
source('C:/Users/Paul Askew/Coursera/best.R')
head(dat)
best("TX","heart attack")
source('C:/Users/Paul Askew/Coursera/rankhospital.R')
?sorted
??sorted
?order
source('C:/Users/Paul Askew/Coursera/rankhospital.R')
source('C:/Users/Paul Askew/Coursera/rankhospital.R')
source('C:/Users/Paul Askew/Coursera/rankhospital.R')
source('C:/Users/Paul Askew/Coursera/rankhospital.R')
source('C:/Users/Paul Askew/Coursera/rankhospital.R')
source('C:/Users/Paul Askew/Coursera/rankhospital.R')
rankall(TX,heart failure,3)
rankall("TX","heart failure",3)
rankhospital("TX","heart failure",3)
rankhospital("TX","heart failure")
submit()
submit()
submit()
submit()
source('C:/Users/Paul Askew/Coursera/rankall.R')
source('C:/Users/Paul Askew/Coursera/rankall.R')
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankhospital(heart failure",3)
rankhospital("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankhospital("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankhospital("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankhospital("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankhospital("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankhospital("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankhospital("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankhospital("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankall("heart failure",3)
source('C:/Users/Paul Askew/Coursera/rankall.R')
rankall("heart failure",3)
rankall("heart failure")
rankall("heart failure",1000)
submit
submit()
submit()
submit()
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
Quiz1
Quiz1.R
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
list.files("./data")
setwd("data")
getwd()
head(house.csv)
head("house.csv")
heads("house.csv")
head('house.csv')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
install.packages("xlsx")
Quiz1.R
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
Quiz1.R
Quiz1
getwd()
setwd(//)
setwd("C:/Users/Paul Askew/Coursera")
Quiz1.R
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
ans
install.packages("XML")
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc<-xmlTreePars(fileURL,useInternal=TRUE)
doc<-xmlTreeParse(fileURL,useInternal=TRUE)
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
doc<-xmlTreeParse(fileURL,useInternal=TRUE)
ans
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
xmlName(rootNode)
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
names(rootNode)
rootNode[1]
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
selector
zipcodes
xmlValue()
xmlValue('zipcode')
xpathSApply(rootNode,"//zipcode",xmlValue)
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
xpathSApply(rootNode,"//zipcode",xmlValue)
?fread
??fread()
?fread()
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
install.packages("data.table")
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
?rowMeans
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
install.packages("fread")
system.time(replicate(1000,sapply(split(DT$pwgtp15,DT$SEX),mean)))
system.time(replicate(1000,mean(DT$pwgtp15,by=DT$SEX)))
system.time(replicate(1000,rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]))
system.time(replicate(1000,(rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]))
system.time(replicate(1000,(rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2])))
system.time(replicate(1000,{rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]}))
system.time(replicate(1000,tapply(DT$pwgtp15,DT$SEX,mean)))
system.time(replicate(1000,DT[,mean(pwgtp15),by=SEX]))
system.time(replicate(1000,mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)))
system.time(replicate(1000,{mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}))
source('C:/Users/Paul Askew/Coursera/Quiz1.R')
swirl()
library(swirl)
library(swirl)
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r-version=="3.1.1",country="US")
filter(cran,r-version=="3.1.1",country=="US")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US" | country=="IN")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,r_version==!is.na())
filter(cran,!is.na(r_version))
cran2<-seelct(cran,size:ip_id)
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size-1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<-group_by(cran,package)
by_package
summarize(cran,avg_bytes=mean(size))
summarize(cran,mean(size))
summarize(by_package,mean(size))
source('C:/Users/PAULAS~1/AppData/Local/Temp/RtmpeWsyZH/summarize1.R')
submit(summarize1)
submit()
reset()
# Compute four values, in the following order, from
pack_sum <- summarize(by_package,
count = ,
unique = ,
countries = ,
avg_bytes = )
?n
?n_distinct
source('C:/Users/PAULAS~1/AppData/Local/Temp/RtmpeWsyZH/summarize1.R')
source('C:/Users/PAULAS~1/AppData/Local/Temp/RtmpeWsyZH/summarize1.R')
avg_bytes = mean(size))
source('C:/Users/PAULAS~1/AppData/Local/Temp/RtmpeWsyZH/summarize1.R')
swirl()
source('C:/Users/PAULAS~1/AppData/Local/Temp/RtmpeWsyZH/summarize1.R')
submit()
swirl()
submit()
reset()
swirl()
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
swirl()
library(swirl)
swirl()
submit()
pack_sum
quantile(pack_sum$count, probs =0.99)
top_counts<-filter(pack_sum,counts>679)
top_counts<-filter(pack_sum,count>679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted<-arrange(top_counts,count)
top_counts_sorted<-arrange(top_counts,desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_uniquw_sorted<-arrange(top_unique,desc(unique()))
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
SUBMIT()
submit()
submit()
View(result3)
submit()
source('C:/Users/PAULAS~1/AppData/Local/Temp/RtmpO8hniN/chain1.R')
source('C:/Users/PAULAS~1/AppData/Local/Temp/RtmpO8hniN/chain1.R')
submit()
submit()
submit()
submit()
submit()
source('~/.active-rstudio-document', echo=TRUE)
